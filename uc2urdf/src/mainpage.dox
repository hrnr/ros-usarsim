/**
\mainpage UC2URDF Generator Main Page

The goal of this tool is to read an unreal script (<i>.uc</i>) file and generates the corresponding Unified Robot Description Format (<i>urdf</i>) file.<BR>

<h1>1. Prequisites</h1>
Prior using this tool, the following actions should be performed:
<ul>
    <li>Generate a <i>urdf file</i> using the <i>URDF File Generator</i>: The URDF File Generator uses data from the tf trees that the USARSim ROS node maintains for all actuators, sensors, and effectors on the robot. The planning description configuration wizard can use this file to generate an arm navigation package to control the robot's actuators. In addition, the robot state publisher uses this file and the robot's joint angles to publish the current tf tree for a robot. Place the generated <i>urdf</i> file is placed in the <i>usarsim_inf/urdf</i> directory.
    <li>Copy the robot <i>.uc</i> file from the Windows usarsim repository to this project <b>etc</b> directory. The <i>.uc</i> file on the Windows platform can be found in the UDK directory in <i>/Development/Src/USARActuator/classes/</i>. 
</ul>

<h1>2. Procedures to Generate the Final URDF File</h1>
The different steps performed in this project in order to build the final <b>urdf</b> file are described below:
<ol>
	<li>Read the <i>.uc</i> file from the <b>etc</b> directory and store link and joint data in memory.
    <li>Read the <i>urdf</i> file generated from the <b>URDF File Generator</b> and store link and joint data in memory.		
    <li>Read the <i>config.ini</i> file from the <b>etc</b> directory to:
        <ul>
            <li>Retrieve collada meshes for each link.
            <li>Modify the names of links and joints read from the <i>.uc</i> file with the names read from the generated <i>urdf</i> file.
        </ul>
    <li>Using link and joint data stored in step 1:
		<ul>
        	<li>Compute the visual xyz for each link.
        	<li>Compute the xyz for each joint.
        	<li>Compute the rpy for each joint.
		</ul>
    <li>Write the final <i>urdf</i> file.
		<ul>
        	<li>Merge <i>urdf</i> data (step 2) with the computed data (step 4).
		</ul>
</ol>

\warning The order of each action in step 4. must be respected.<br>Each action in step 4. replaces some data in the original stored list for links and joints and performing these actions in a different order may generate a <i>urdf</i> file with wrong information.<br>

<h1>3. Compiling and Running the Tool</h1>
To compile the tool:
<ol>
    <li><b>cd uc2urdf</b> 
    <li><b>make</b>
</ol>


To run the tool:
<ol>
    <li><b>cd uc2urdf/bin</b> 
    <li><b>./uc2urdf -input generated_urdf.xml -uc file.uc -output newurdf.xml</b>
</ol>
Where:
<ul>
    <li><b>generated_urdf</b> is the file generated at step 1., section 1. (Prequisites). The tool will automatically search for this file in the <b>/usarsim_inf/urdf</b> directory.
    <li><b>file.uc</b> is the <i>.uc</i> file described in step 2., section 1. (Prequisites). The tool will automatically search for this file in the <b>uc2urdf/etc/</b> directory.
    <li><b>newurdf.xml</b> is the output file. The tool will automatically create this file in the <b>uc2urdf/etc/</b> directory.
</ul>

<h1>Annexes</h1>
The following sections describe the different sections of a <i>.uc</i> file and a <i>urdf</i> file.

<h2> Structure of a .uc file (input file)</h2>
In a <b>.uc</b> file, the positions and orientations of each link (defined by <i>Class=parent</i>) are relative to the first link (<i>base_link</i>).
<BR>For instance, in the following piece of code taken from <b>kr60Arm.uc</b>,
the <i>Offset</i> for <i>Joint2</i> is relative to the position of <i>Joint1</i>.<BR>If we place <i>Joint1</i> at X=0.5,Y=0.0, Z=0.3, the position of <i>Joint2</i>
in the environment will be at X=0.824,Y=-0.008, Z=-0.388, i.e., X=0.5+0.324,Y=0.0-0.008, Z=0.3-0.688.<BR>
The same reasoning is applied for <i>Joint3</i>.<BR><BR>

The position and orientation for each joint (defined by <i>Class=RevoluteJoint</i>) are relative to the position and orientation of the first link (<i>Joint1</i>), respectively.
<BR>For instance if X=0.5,Y=0.0, Z=0.3 for link <i>Joint1</i>, the joint <i>Joint2_Joint3</i> will be placed in the environment at X=0.5+0.520=1.020,Y=0.0+0.016=0.016, Z=0.3-0.792=-0.492.

\verbatim
Begin Object Class = Part Name=Link1
    Mesh=StaticMesh'KR60.KR60_1'
    Mass=5.0
End Object
	Body=Joint1
	PartList.Add(Joint1)

Begin Object Class=Part Name=Link2
    Mesh=StaticMesh'KR60.KR60_2'
    Mass=1
    Offset=(X=0.324,Y=-0.008,Z=-0.688)
End Object
	PartList.Add(Joint2)

Begin Object Class=Part Name=Link3
    Mesh=StaticMesh'KR60.KR60_3'
    Mass=.5
    Offset=(X=0.512,Y=0.252, Z =-1.384)
End Object
	PartList.Add(Joint3)
...

Begin Object Class=RevoluteJoint Name=Joint1_Joint2
    Parent=Joint1
    Child=Joint2
    Damping=100
    MaxForce=600
    LimitLow=-3.14
    LimitHigh=3.14
    Offset=(X=.112,Y=0.016,Z=-.792)
    Direction=(x=3.1415,y=0,z=0)
End Object
Joints.Add(Joint1_Joint2)

Begin Object Class=RevoluteJoint Name=Joint2_Joint3
    Parent=Joint2
    Child=Joint3
    Damping=200
    MaxForce=1500
    LimitLow=-0.61
    LimitHigh=2.356
    Offset=(X=.520,Y=.016,Z=-.792)
    Direction=(x=-1.571,y=1.571,z=0)
End Object
Joints.Add(Joint2_Joint3)
...
\endverbatim

<h2> Structure of a urdf file (output file)</h2>

In a <b>urdf</b> file, The way links and joints are positioned and oriented is different from the way this is represented in a <b>.uc</b> file. In a <b>urdf</b> file, each joint has a parent link and child link.<BR>
The position and orientation of each joint are relative to the position and orientation, respectively, of the parent link.<BR>
The position and the orientation of each link are relative to the position and the orientation, respectively, of the joint for which this link is the child.<BR><BR>

In the following piece of <b>urdf</b> file presented below, the joint <i>KR60Arm_joint_1</i> has the link <i>KR60Arm_link0</i> as its parent and link <i>KR60Arm_link1</i> as its child.
<BR>The position and orientation of <i>KR60Arm_joint_1</i> is relative to the position and orientation of <i>KR60Arm_link0</i> (its parent).
<BR>In the same way, since link <i>KR60Arm_link1</i> is the child of joint <i>KR60Arm_joint_1</i>, the position and orientation of <i>KR60Arm_link1</i> is relative to the position and orientation of joint <i>KR60Arm_joint_1</i>, respectively.<BR><BR>
The same reasoning is applied to the position and orientation of joint <i>KR60Arm_joint_2</i> and link <i>KR60Arm_link2</i>.

\verbatim
<link name="KR60Arm_link0">
    <visual>
        <geometry>
            <mesh filename="package://usarsim_inf/urdf/meshes/kr60_1.dae"/>
        </geometry>
        <material name="White"/>
        <origin xyz="0. 0. 0" rpy="3.14 0 0." />
    </visual>
    <collision>
      <geometry>
        <box size = "0.80 0.05 0.05"/>
      </geometry>
      <origin xyz="0.06 0.01 -0.40" rpy="0.00 1.43 0.18" />
    </collision>
</link>

<link name ="KR60Arm_link1">
    <visual>
        <geometry>
            <mesh filename="package://usarsim_inf/urdf/meshes/kr60_2.dae"/>
        </geometry>
        <material name="White"/>
        <origin xyz="0.212 0.024 -0.104" rpy="0 0 0." />
    </visual>
    <collision>
        <geometry>
            <box size = "1.01 0.05 0.05"/>
        </geometry>
        <origin xyz="0.50 0.00 0.00" rpy="0.00 -0.00 0.00" />
    </collision>
</link>

<link name ="KR60Arm_link2">
    <visual>
        <geometry>
            <mesh filename="package://usarsim_inf/urdf/meshes/kr60_3.dae"/>
        </geometry>
        <material name="White"/>
        <origin xyz="0.592 0.008   0.236" rpy="-1.571 0 -1.571" />
    </visual>
    <collision>
        <geometry>
            <box size = "1.01 0.05 0.05"/>
        </geometry>
        <origin xyz="0.50 0.00 0.00" rpy="0.00 -0.00 0.00" />
    </collision>
</link>
...
<joint name="KR60Arm_joint_1" type="revolute">
    <parent link="KR60Arm_link0"/>
    <child link="KR60Arm_link1"/>
    <origin xyz="0.112 0.016 -0.792" rpy="3.14 -0.00 0.00" />
    <axis xyz="0.0 0.0 1" />
    <limit effort="600.00" lower="-3.14" upper="3.14" velocity="1.0" />
</joint>

<joint name="KR60Arm_joint_2" type="revolute">
    <parent link="KR60Arm_link1"/>
    <child link="KR60Arm_link2"/>
    <origin xyz="0.408 0 0" rpy="-3.14 -1.57 -1.57" />
    <axis xyz="0.0 0.0 1" />
    <limit effort="1500.00" lower="-0.61" upper="2.36" velocity="1.0" />
</joint>
...
\endverbatim

*/
